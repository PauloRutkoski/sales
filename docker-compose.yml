version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: sales_zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: sales_kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  db_person:
    image: mysql
    container_name: db_person_mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: '123456'
    ports:
      - "3306:3306"
    volumes:
      - "./scripts/db_person_create.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - default
  
  db_products:
    image: mysql
    container_name: db_products_mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: '123456'
    ports:
      - "3307:3306"
    volumes:
      - "./scripts/db_products_create.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - default
  
  db_orders:
    image: mysql
    container_name: db_orders_mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: '123456'
    ports:
      - "3308:3306"
    volumes:
      - "./scripts/db_orders_create.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - default

  ms_person:
    build:
      "./person"
    container_name: ms_person
    ports:
      - "8080:8080"
    networks:
      - default
    profiles:
      - dev
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"

  ms_products:
    build:
      "./products"
    container_name: ms_products
    ports:
      - "8081:8080"
    networks:
      - default
    profiles:
      - dev
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"  
  
  ms_orders:
    build:
      "./orders"
    container_name: ms_orders
    ports:
      - "8082:8080"
    networks:
      - default
    profiles:
      - dev
    environment:
       - "SPRING_PROFILES_ACTIVE=dev"  
  
networks:
  default:
    driver: bridge
